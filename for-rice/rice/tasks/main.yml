---
- name: Install dnf dependencies
  become: true
  dnf:
    name: "{{ item }}"
    state: present
  loop: "{{ repo_dependencies }}"

- name: Create Downloads directory
  file:
    path: "/home/{{ user }}/Downloads"
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: '0755'

- name: Create .config directory
  file:
    path: "/home/{{ user }}/.config"
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: '0700'

- name: Install JetBrainsMono NF
  block:
    - name: Create fonts directory
      file:
        path: "/home/{{ user }}/.local/share/fonts"
        state: directory
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: '0755'

    - name: Download JetBrainsMono
      get_url:
        dest: "/home/{{ user }}/Downloads/JetBrainsMono.zip"
        url: https://github.com/ryanoasis/nerd-fonts/releases/download/v3.3.0/JetBrainsMono.zip
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: '0644'

    - name: Extract JetBrainsMono
      unarchive:
        src: "/home/{{ user }}/Downloads/JetBrainsMono.zip"
        dest: "/home/{{ user }}/.local/share/fonts/" # multiple items in zip
        remote_src: yes

    - name: Refresh available fonts
      shell: "/usr/bin/fc-cache -rv"

- name: Shared sway config files
  become: true
  block:
    - name: Create directories for shared files
      file:
        path: "{{ item }}"
        state: directory
        owner: root
        group: root
        mode: '0755'
      loop:
        - /usr/share/sway
        - /usr/share/sway/config.d
        - /usr/share/sway-systemd
        - /etc/sway
        - /etc/sway/config.d

    - name: Copy files to /usr/share/sway/config.d
      copy:
        src: "{{ item }}"
        dest: "/usr/share/sway/config.d/{{ item }}"
        owner: root
        group: root
        mode: '0644'
      loop: "{{ share_sway_configd }}"

    - name: Copy files to /usr/share/sway-systemd
      copy:
        src: "{{ item }}"
        dest: "/usr/share/sway-systemd/{{ item }}"
        owner: root
        group: root
        mode: '0644'
      loop: "{{ share_sway_systemd }}"

    - name: Copy files to /etc/sway/config.d
      copy:
        src: "{{ item }}"
        dest: "/etc/sway/config.d/{{ item }}"
        owner: root
        group: root
        mode: '0644'
      loop: "{{ etc_sway_configd }}"

    # There are some other files in /etc/sway for general config
    # but these don't seem to affect the main user's appearance in any way as they
    # are overwritten by the files uploaded in the next block.
    # I'd also have to upload the default.jpg background image.
    #
    # The numbered sway conf files are from Fedora Sway Spin and offer functionality
    # like notifications, audio, system, etc.

- name: Configure Sway
  block:
    - name: Create .config/sway
      file:
        path: "/home/{{ user }}/.config/sway"
        state: directory
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: '0755'

    - name: Copy sway config
      copy:
        src: sway-config
        dest: "/home/{{ user }}/.config/sway/config"
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: '0644'

- name: Configure swaylock
  block:
    - name: Create .config/swaylock
      file:
        path: "/home/{{ user }}/.config/swaylock"
        state: directory
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: '0755'

    - name: Copy swaylock config
      copy:
        src: swaylock-config
        dest: "/home/{{ user }}/.config/swaylock/config"
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: '0644'

- name: Configure SDDM
  block:
    - name: Download SDDM theme
      git:
        repo: https://gitlab.com/pwyde/monochrome-kde.git
        dest: "/home/{{ user }}/Downloads/monochrome-kde"

    - name: Copy monochrome-kde SDDM theme
      become: true
      copy:
        src: "/home/{{ user }}/Downloads/monochrome-kde/sddm/themes/monochrome"
        dest: /usr/share/sddm/themes/monochrome
        remote_src: yes
        owner: root
        group: root
        mode: '0755'

    - name: Upload customized monochrome theme config
      become: true
      copy:
        src: sddm-theme.conf
        dest: /usr/share/sddm/themes/monochrome/theme.conf
        owner: root
        group: root
        mode: '0644'
        force: true

    - name: Remove repo
      file:
        path: "/home/{{ user }}/Downloads/monochrome-kde"
        state: absent
        recurse: yes

    - name: Create config directory for sddm
      become: true
      file:
        path: /etc/sddm.conf.d
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Upload sddm config
      become: true
      copy:
        src: wayland-sway.conf
        dest: /etc/sddm.conf.d/wayland-sway.conf
        owner: root
        group: root
        mode: '0644'

    - name: Enable and start sddm
      become: true
      systemd:
        name: sddm
        state: restarted
        enabled: true

- name: Configure kitty
  block:
    - name: Create .config/kitty
      file:
        path: "/home/{{ user }}/.config/kitty"
        state: directory
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: '0755'

    - name: Upload theme
      copy:
        src: kitty-theme.conf
        dest: "/home/{{ user }}/.config/kitty/theme.conf"
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: '0644'

    - name: Upload config
      copy:
        src: kitty.conf
        dest: "/home/{{ user }}/.config/kitty/kitty.conf"
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: '0644'

- name: ZSH configuration
  block:
    - name: Change default shell to zsh
      user:
        name: "{{ user }}"
        shell: "/bin/zsh"

    - name: Download oh-my-zsh
      get_url:
        url: https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
        dest: "/home/{{ user }}/install.sh"
        mode: '0755'

    - name: Install oh-my-zsh
      script:
        cmd: "/home/{{ user }}/install.sh"

    - name: Download zsh plugins
      git:
        repo: "{{ item.repo }}"
        dest: "/home/{{ user }}/.oh-my-zsh/custom/plugins/{{ item.name }}"
      loop: "{{ zsh_plugins }}"

    - name: Change ZSH theme
      lineinfile:
        path: "/home/{{ user }}/.zshrc"
        regexp: ^ZSH_THEME
        line: ZSH_THEME="dst"
        state: present

    - name: Enable plugins
      lineinfile:
        path: "/home/{{ user }}/.zshrc"
        regexp: ^plugins
        line: plugins=(git zsh-autosuggestions zsh-syntax-highlighting you-should-use zsh-bat)
        state: present

    - name: Add aliases to .zshrc
      blockinfile:
        path: "/home/{{ user }}/.zshrc"
        block: |
          alias vi="nvim"
          alias vim="nvim"
          alias dnf="sudo dnf"
          alias wifi='f() { nmcli device wifi connect $1 --ask };f'
          alias ports='netstat -tulanp'
          alias meminfo='free -m -l -t'
          alias psmem='ps auxf | sort -nr -k 4'
          alias psmem10='ps auxf | sort -nr -k 4 | head -10'
          alias pscpu='ps auxf | sort -nr -k 3'
          alias pscpu10='ps auxf | sort -nr -k 3 | head -10'
          alias wget='wget -c'
          alias df='df -H'
          alias du='du -ch'
          alias fast='fastfetch'
        state: present

- name: Configure rofi
  block:
    - name: Create .config/rofi
      file:
        path: "/home/{{ user }}/.config/rofi"
        state: directory
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: '0755'

    - name: Upload rofi theme
      become: true
      copy:
        src: rofi-theme.rasi
        dest: /usr/share/rofi/themes/minimal.rasi
        owner: root
        group: root
        mode: '0644'

    - name: Create rofi config file
      file:
        path: "/home/{{ user }}/.config/rofi/config.rasi"
        state: touch
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: '0644'

    - name: Insert relevant text in rofi config
      lineinfile:
        path: "/home/{{ user }}/.config/rofi/config.rasi"
        line: '@theme "/usr/share/rofi/themes/minimal.rasi"'
        state: present

- name: Configure waybar
  block:
    - name: Create .config/waybar
      file:
        path: "/home/{{ user }}/.config/waybar"
        state: directory
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: '0755'

    - name: Upload config.jsonc
      copy:
        src: waybar-config.jsonc
        dest: "/home/{{ user }}/.config/waybar/config.jsonc"
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: '0644'

    - name: Upload style.css
      copy:
        src: waybar-style.css
        dest: "/home/{{ user }}/.config/waybar/style.css"
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: '0644'

- name: Configure dunst
  block:
    - name: Create .config/dunst
      file:
        path: "/home/{{ user }}/.config/dunst"
        state: directory
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: '0755'

    - name: Upload dunstrc
      copy:
        src: dunstrc
        dest: "/home/{{ user }}/.config/dunst/dunstrc"
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: '0644'

- name: Configure nvim
  block:
    - name: Create .config/nvim
      file:
        path: "/home/{{ user }}/.config/nvim"
        state: directory
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: '0755'

    - name: Clone nvim kickstart repo
      git:
        repo: https://github.com/nvim-lua/kickstart.nvim.git
        dest: "/home/{{ user }}/.config/nvim"

    - name: Change nerd font variable
      lineinfile:
        path: "/home/{{ user }}/.config/nvim/init.lua"
        regexp: ^vim.g.have_nerd_font
        line: vim.g.have_nerd_font = true
        state: present

    - name: Add colorscheme
      lineinfile:
        path: "/home/{{ user }}/.config/nvim/init.lua"
        regexp: 'folke/tokyonight.nvim'
        line: "    'kabouzeid/nvim-jellybeans',"
        state: present

    - name: Add dependency for color scheme
      lineinfile:
        path: "/home/{{ user }}/.config/nvim/init.lua"
        insertafter: "    'kabouzeid/nvim-jellybeans',"
        line: "    dependencies = { 'rktjmp/lush.nvim' },"
        state: present

    - name: Change color scheme
      lineinfile:
        path: "/home/{{ user }}/.config/nvim/init.lua"
        regexp: vim.cmd.colorscheme
        line: "      vim.cmd.colorscheme 'jellybeans'"
        state: present

- name: Configura zathura
  block:
    - name: Create .config/zathura
      file:
        path: "/home/{{ user }}/.config/zathura"
        state: directory
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: '0755'

    - name: Upload zathura config
      copy:
        src: zathurarc
        dest: "/home/{{ user }}/.config/zathura/zathurarc"
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: '0644'

- name: General system theme (Icons, GTK, etc)
  block:
    - name: Create .themes directory
      file:
        path: "/home/{{ user }}/.themes"
        state: directory
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: '0755'

    - name: Create .icons directory
      file:
        path: "/home/{{ user }}/.icons"
        state: directory
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: '0755'

    - name: Create gtk config directories
      file:
        path: "/home/{{ user }}/.config/{{ item }}"
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: '0755'
      loop:
        - gtk-3.0
        - gtk-4.0

    - name: Download Equilux theme
      get_url:
        url: https://github.com/ddnexus/equilux-theme/archive/refs/tags/equilux-v20181029.tar.gz
        dest: "/home/{{ user }}/Downloads/equilux-compact.tar.gz"
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: '0644'

    - name: Decompress Equilux theme into app
      unarchive:
        remote_src: yes
        src: "/home/{{ user}}/Downloads/equilux-compact.tar.gz"
        dest: "/home/{{ user }}/.themes/Equilux-compact"
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: '0755'

    - name: Download Gruvbox icons
      get_url:
        url: https://github.com/SylEleuth/gruvbox-plus-icon-pack/archive/refs/tags/v6.2.0.zip
        dest: "/home/{{ user }}/Downloads/gruvbox-icons.zip"
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: '0644'

    - name: Decompress Gruvbox icons
      unarchive:
        remote_src: yes
        src: "/home/{{ user }}/Downloads/gruvbox-icons.zip"
        dest: "/home/{{ user }}/.icons/" # zip contains two items
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: '0755'

    - name: Upload gtk-3.0 and gtk-4.0 config
      copy:
        src: GTK-Settings.ini
        dest: "/home/{{ user }}/.config//{{ item }}/settings.ini"
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: '0644'
      loop:
        - gtk-3.0
        - gtk-4.0
